---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    serviceaccounts.openshift.io/oauth-redirectreference.primary: '{"kind":"OAuthRedirectReference","apiVersion":"v1","reference":{"kind":"Route","name":"ots"}}'
  name: ots
  app: ots

---
apiVersion: v1
kind: Service
metadata:
  annotations:
    service.alpha.openshift.io/serving-cert-secret-name: sec-ots-tls
  labels:
    name: ots
    app: ots
  name: ots
  namespace: test-ots
spec:
  ports:
  - name: ots-auth
    port: 443
    protocol: TCP
    targetPort: 8443
  selector:
    app: ots

---
# Route
apiVersion: route.openshift.io/v1
kind: Route
metadata:
  labels:
    app: ots
  name: ots
  namespace: test-ots
spec:
  host: ots.apps.replicas.io
  port:
    targetPort: ots
  tls:
    insecureEdgeTerminationPolicy: Redirect
    termination: Reencrypt
  to:
    kind: Service
    name: ots
    weight: 100
  wildcardPolicy: None

---
# Secret for encryption master key and redis authentication, gets set as env vars for containers
# Base64 encoded
apiVersion: v1
kind: Secret
type: Opaque
data:
  otsMasterKey: QVk4aGh4ZlNwUHJ2YzJORVMyRms3eWdIVVRSaUd0WVZlNW9ubUVoUWoyZ2dnNDVDZ05iUmNTcm04ZHJBb0o2bg==
  otsRedisPW: blFrS2lmWGlUVFJENW1MN0gyWW9DUnlSWWhSb1ZiTW83a1lkTWlpNmRqbmVCdVIyRzN4U0syVWFuU3U2WWFZWA==
metadata:
  labels:
    app: ots
  name: ots-secrets
  namespace: test-ots

---
# PVC for redis data
apiVersion: "v1"
kind: "PersistentVolumeClaim"
metadata:
  name: "ots-data"
  namespace: test-ots
spec:
  accessModes:
    - "ReadWriteOnce"
  resources:
    requests:
      storage: "1Gi"
  volumeName: "pv0001"

---
apiVersion: apps.openshift.io/v1
kind: DeploymentConfig
metadata:
  labels:
    app: ots
  name: ots
  namespace: test-ots
spec:
  replicas: 1
  revisionHistoryLimit: 2
  selector:
    app: ots
    deploymentconfig: ots
  strategy:
    activeDeadlineSeconds: 21600
    resources: {}
    rollingParams:
      intervalSeconds: 1
      maxSurge: 25%
      maxUnavailable: 25%
      timeoutSeconds: 600
      updatePeriodSeconds: 1
    type: Rolling
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: ots
        deploymentconfig: ots
    spec:
      serviceAccountName: ots
      nodeSelector:
        zone: infra
      containers:

      # OCP oauth proxy
      - name: ots-proxy
        image: registry.redhat.io/openshift3/oauth-proxy
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 8443
          name: web
        args:
        - --provider=openshift
        - --https-address=:8443
        - --http-address=
        - --email-domain=*
        - --cookie-name=oauth2_openshift
        - --upstream=http://localhost:7143
        - --client-id=system:serviceaccount:test-ots:ots
        - --openshift-ca=/etc/pki/tls/cert.pem
        - --openshift-ca=/var/run/secrets/kubernetes.io/serviceaccount/ca.crt
        - --openshift-service-account=ots
        - '--openshift-sar={"resource": "namespaces", "verb": "get", "resourceName": "ocpmon", "namespace": "ots"}'
        - --tls-cert=/etc/tls/private/tls.crt
        - --tls-key=/etc/tls/private/tls.key
        - --client-secret-file=/var/run/secrets/kubernetes.io/serviceaccount/token
        - --cookie-secret-file=/etc/proxy/secrets/session_secret
        - --cookie-domain=apps.replicas.io
        - --cookie-expire=8h0m0s
        - --footer=-
        volumeMounts:
        - mountPath: /etc/tls/private
          name: ots-tls
        - mountPath: /etc/proxy/secrets
          name: ots-proxy
        - mountPath: /etc/pki/tls/
          name: cluster-cert
          readOnly: true
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /oauth/healthz
            port: 8443
            scheme: HTTPS
          initialDelaySeconds: 20
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 10
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /oauth/healthz
            port: 8443
            scheme: HTTPS
          initialDelaySeconds: 20
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 10
        resources:
          limits:
            cpu: 100m
            memory: 150Mi
          requests:
            cpu: 50m
            memory: 150Mi
        securityContext:
          capabilities: {}
          privileged: false
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File

      # OTS APP
      - env:
        - name: OTS_DOMAIN
          value: ots.apps.replicas.io
        - name: OTS_MASTER_KEY
          valueFrom:
            secretKeyRef:
              key: otsMasterKey
              name: ots-secrets
        - name: OTS_REDIS_PW
          valueFrom:
            secretKeyRef:
              key: otsRedisPW
              name: ots-secrets
        - name: OTS_REDIS_HOST
          value: 127.0.0.1
        - name: OTS_REDIS_PORT
          value: "7179"
        - name: OTS_IMAGE_FAV_ICON
          value: https://img.lovepik.com/element/40054/5289.png_860.png
        - name: OTS_IMAGE_LOGO
          value: https://img.lovepik.com/element/40054/5289.png_860.png
        - name: OTS_COLOR
          value: '#f7dc6f'
        image: siw36/onetimesecret:develop
        imagePullPolicy: Always
        resources:
          limits:
            cpu: 250m
            memory: 200Mi
          requests:
            cpu: 100m
            memory: 150Mi
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /404.html
            port: 7143
            scheme: HTTP
          initialDelaySeconds: 10
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 5
        name: ots-app
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /404.html
            port: 7143
            scheme: HTTP
          initialDelaySeconds: 5
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File

      # Redis
      - command:
        - /bin/sh
        - -c
        - redis-server --dir /data --requirepass $OTS_REDIS_PW --bind $OTS_REDIS_HOST
          --port $OTS_REDIS_PORT --databases 16 --timeout 30 --daemonize no --loglevel
          notice --save 157680000 1 --rdbcompression yes --appendonly yes --appendfsync
          everysec
        env:
        - name: OTS_REDIS_PW
          valueFrom:
            secretKeyRef:
              key: otsRedisPW
              name: ots-secrets
        - name: OTS_REDIS_HOST
          value: 127.0.0.1
        - name: OTS_REDIS_PORT
          value: "7179"
        image: redis:latest
        imagePullPolicy: IfNotPresent
        resources:
          limits:
            cpu: 250m
            memory: 200Mi
          requests:
            cpu: 100m
            memory: 150Mi
        livenessProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - redis-cli -h $OTS_REDIS_HOST -p $OTS_REDIS_PORT -a $OTS_REDIS_PW ping
          failureThreshold: 3
          initialDelaySeconds: 10
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        name: ots-redis
        readinessProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - redis-cli -h $OTS_REDIS_HOST -p $OTS_REDIS_PORT -a $OTS_REDIS_PW ping
          failureThreshold: 3
          initialDelaySeconds: 5
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /data
          name: redis-pv-data
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
      volumes:
      - name: redis-pv-data
        persistentVolumeClaim:
          claimName: ots-data
      - name: ots-proxy
        secret:
          secretName: sec-ots-proxy
      - name: ots-tls
        secret:
          secretName: sec-ots-tls
      - name: cluster-cert
        secret:
          defaultMode: 420
          secretName: cluster-selfsigned-cert
  test: false
  triggers:
  - type: ConfigChange
